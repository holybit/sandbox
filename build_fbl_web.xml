<?xml version="1.0" encoding="UTF-8"?>
<project name="FBL-Web" default="hudson" basedir=".">
  <description>FBL Web</description>

<!-- DO NOT EDIT THIS FILE
  All edits should be done using the Jenkins configuration GUI
  The following properties need to be set in the "advanced" options under the "Invoke Ant" build step.
     src: directory to rsync
     rsync_user: owner of the code being rysnced
     stage_path: stage_path is appended as such /usr/local/stage/[stage_location]/${stage_path}/
-->

<!-- Global properties -->
  <!-- PHP -->
  <property name="phpBin" location="/usr/local/php/bin" />
  <!-- Build Properties -->
  <property name="dist" location="dist" />
  <property name="logs" location="logs" />
  <property name="src" location="." />
  <!-- Load environment variables -->
  <property environment="env" />
  <property file="hudsonBuild.properties" />
  <!-- Stage machines -->
  <property name="stageHost" value="stage.tst.returnpath.net" />
  <property name="stageCIHost" value="stage-ci.returnpath.net" />
  <property name="buildId" value="${ant.project.name}_${env.BUILD_ID}_${env.BUILD_NUMBER}" />
  <!-- CI specific -->
  <property name="buildId" value="${ant.project.name}_${env.BUILD_ID}_${env.BUILD_NUMBER}" />
  <!-- Time stamp for rsync backup -->
  <tstamp>
    <format property="DATE" pattern="yyyyMMddHHmmss" />
  </tstamp>
  <!-- General rsync options needed for each project -->
  <property name="rsyncOptions" value="-av --stats --compress --checksum --size-only --perms --delete --backup --backup-dir=backup/push_${DATE}" />
  <!-- Who is running the build?  Defaults to admin -->
  <condition property="build.user.emailAddress">
    <isset property="${build.user.emailAddress}" />
  </condition>
  <!-- Properties in ant are immutable, so the following happens only if previous condition is not set -->
  <property name="build.user.emailAddress" value="${build.admin.emailAddress}" />
  <!-- What action is being done?  Defaults to buld -->
  <condition property="Action">
    <isset property="${Action}" />
  </condition>
  <!-- Properties in ant are immutable, so the following happens only if previous condition is not set -->
  <property name="Action" value="Build" />

<!-- Main Jenkins targets -->
  <!-- Check if build triggerd by gerrit -->
  <target name="is-build-gerrit-triggered">
    <condition property="gerritProject" value="${env.GERRIT_PROJECT}">
      <isset property="env.GERRIT_PROJECT" />
    </condition>
    <echo message="Build triggered by gerrit." />
    <echo message="gerrit stream-events type = patchset-added" />
    <echo message="env.GERRIT_PROJECT = ${gerritProject}" />
  </target>

  <!-- Jenkins CI target for testing code in CI and all reports -->
  <target name="hudson" depends="is-build-gerrit-triggered,clean-logs,init,dist,rsync-cistage-and-push,php-syntax,phpunit,selenium,phpcs,build-and-stage,dist-clean" >
    <echo message="Initializing ${ant.project.name} Environment." />
  </target>

<!-- Clean up previous run logs -->
  <target name="clean-logs" if="gerritProject">
    <delete dir="${logs}" />
  </target>

<!-- Create the build directory structure -->
  <target name="init">
    <echo message="Initializing ${ant.project.name} Environment." />
    <mkdir dir="${dist}" />
    <mkdir dir="${logs}" />
    <mkdir dir="${logs}/php" />
    <mkdir dir="${logs}/test/selenium" />
    <mkdir dir="${logs}/rsync" />
  </target>

<!-- Move files into the distribution directory -->
  <target name="dist">
    <copy todir="${dist}">
      <fileset dir="${src}">
        <include name="**/*" />
        <exclude name="**/.git/**" />
        <exclude name="**/.git*" />
        <exclude name="build.xml" />
        <exclude name="build/" />
        <exclude name="dist/" />
        <exclude name="hudsonBuild.properties" />
        <exclude name="logs/" />
        <exclude name="offline/" />
        <exclude name="test/" />
      </fileset>
    </copy>

    <!-- Set permissions of dist directory -->
    <antcall target="permissions" />
  </target>

<!-- Set permissions to all files in dist directory -->
  <target name="permissions">
    <echo message="Setting permissions on distribution directory to a+rx." />
    <chmod perm="a+rx">
      <fileset dir="${dist}" />
      <dirset dir="${dist}" />
    </chmod>
  </target>

<!-- Build (CI)-->
  <target name="rsync-cistage-and-push" if="gerritProject">
    <echo message="rsyncing to CI environment - ${stageCIHost}." />
    <echo message="rysnc log - ${logs}/rsync_ci.log" />
    <exec executable="/usr/bin/rsync" failonerror="true" output="${logs}/rsync/rsync_ci.log">
      <arg line="${rsyncOptions} ${dist}/ ${rsync_user}@${stageCIHost}:/usr/local/stage/ci_test/${stage_path}/" />
    </exec>
    <echo message="Pushing code to CI." />
    <property name="ci_install" value="/usr/local/stage/distribute/ci_install.sh" />
    <exec executable="ssh" failonerror="true" output="${logs}/ci_install.log">
      <arg line="cmuser@${stageCIHost} ${ci_install} ${conf} ${buildId} ${module}" />
    </exec>
    <exec executable="cat" failonerror="on">
      <arg line="${logs}/ci_install.log" />
    </exec>
  </target>

<!-- phpunit -->
  <target name="phpunit" if="gerritProject" depends="init">
    <exec executable="${phpBin}/phpunit" failonerror="on">
      <arg line="--log-junit logs/php/phpunit.xml" />
      <arg line="--coverage-html logs/php/" />
      <arg line="test/" />
    </exec>
  </target>

<!-- php-syntax -->
  <target name="php-syntax" if="gerritProject">
    <exec executable="${env.WORKSPACE}/test/build/php_syntax.bash" failonerror="on" output="${logs}/php/php_syntax.log" />
    <exec executable="cat" failonerror="on">
      <arg line="${logs}/php/php_syntax.log" />
    </exec>
  </target>

<!-- selenium -->
  <target name="selenium" if="gerritProject" depends="init">
    <exec executable="${env.WORKSPACE}/test/build/selenium.bash" failonerror="on" />
  </target>

<!-- PHPCodeSniffer -->
  <target name="phpcs" if="gerritProject" depends="init">
    <exec executable="${env.WORKSPACE}/test/build/phpcs.bash" failonerror="on" />
  </target>

<!-- Build and Stage (STAGE TO TEST)-->
  <target name="check-build-and-stage">
    <condition property="doBuildAndStage">
      <equals arg1="${Action}" arg2="Build_and_Stage" />
    </condition>
    <echo message="Performing requested action: ${Action}" />
  </target>

  <target name="build-and-stage" if="doBuildAndStage" depends="check-build-and-stage">
    <echo message="Staging to Test Environment." />
    <property name="rsync_log" value="${env.WORKSPACE}/logs/rsync/rsync_test.log" />
    <property name="jenkins_rally_bin" value="/usr/local/jenkins/tools/jenkins/rally/bin" />

    <!-- Execute rsync -->
    <exec executable="/usr/bin/rsync" append="true" output="${logs}/rsync/rsync_test.log">
      <arg line="${rsyncOptions} ${dist}/ ${rsync_user}@${stageHost}:/usr/local/stage/test/${stage_path}/" />
    </exec>

    <!-- Update Rally with release information -->
    <echo message="Recording release details in Rally for story card ${Story_Card}" />
    <echo message="Project: ${ant.project.name}" />
    <echo message="Pushed By: ${build.user.emailAddress}" />
    <echo message="Rsync Path: ${rsync_log}" />
    <echo message="Notes: ${Notes}" />

    <!-- execute Rally update -->
    <exec executable="/bin/bash" failonerror="false" append="true" output="${logs}/rally_api.log">
      <arg value="${jenkins_rally_bin}/env.sh" />
      <arg value="${jenkins_rally_bin}/push_files.pl" />
      <arg value="-m" />
      <arg value="${ant.project.name}" />
      <arg value="-c" />
      <arg value="${Story_Card}" />
      <arg value="-p" />
      <arg value=" ${build.user.emailAddress}" />
      <arg value="-s" />
      <arg value="test_stage" />
      <arg value="-l" />
      <arg value="${rsync_log}" />
      <arg value="-n" />
      <arg value="${Notes}" />
    </exec>
  </target>

<!-- Post build removal of dist directory -->
  <target name="dist-clean">
    <delete dir="${dist}" />
  </target>
</project>
